<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSwitchZone</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objSwitchZone</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

canSwitchHere = false;

if (global.always_switch)
{
    if (!isInSwitchZone) canSwitchHere = true;
}
else
{
    if (isInSwitchZone) canSwitchHere = true;
}

if ( place_meeting ( x , y , objSwitchZoneForced ) )
    &amp;&amp; global.switchreality = false 
    &amp;&amp; switching_ready 
    &amp;&amp; canSwitchHere {
        
    global.switchreality = true;    
    global.target_x = phy_position_x;
    global.target_y = phy_position_y;
    global.target_xvel = phy_linear_velocity_x;
    global.target_yvel = phy_linear_velocity_y;
    global.target_sprindex = sprite_index;
    
    global.linked_objects = -1; //Reset linked objects collection
    
    var linked_objects_count = instance_number(objDynamic);
    
    for (var i = 0; i &lt; linked_objects_count; i++)
    {
        var instance = instance_find(objDynamic, i);
        
       if (instance.is_linked)
        {
            global.linked_objects[i, 0] = instance.link_tag;
            global.linked_objects[i, 1] = instance.phy_position_x;
            global.linked_objects[i, 2] = instance.phy_position_y;
            global.linked_objects[i, 3] = instance.phy_linear_velocity_x;
            global.linked_objects[i, 4] = instance.phy_linear_velocity_y;   
        }
    } 
    
    //background_colour = c_white;
    //image_blend = c_black;
    instance_create(0, 0, objSwitchOverlay);
    
    /*var emitter = instance_create(phy_position_x, phy_position_y, objParticleEmitter);
    emitter.emit_rate = room_speed / 32;
    emitter.blend_color = c_white;
    emitter.radius = 16;
    emitter.target_sprite = sprSwitchReverse;
    emitter.active = true;*/
    
    audio_sound_gain(slide_loop, 0, 250);
    audio_play_sound(sndSwitch, 0, false);
    
    physics_pause_enable(true);
    sprite_index = sprPlayerSwitch;
    image_speed = (image_number - 1) / (room_speed / 2);

    alarm[0] = room_speed / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
