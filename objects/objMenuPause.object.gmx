<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>objMenuParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

menu_options[0] = "MAIN MENU";
menu_options[1] = "RESUME";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(menu_selection)
{
    case 0: 
    room_goto(rmMainMenu);
    break;
    
    case 1:
    with (objPause) event_perform(ev_keypress, vk_escape);
    instance_destroy();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; array_length_1d(menu_options); i++)
{
    buttonX = view_xview[0] + view_wview[0] / 2;
    buttonY = view_yview[0] + view_hview[0] / 3 + (i * (sprite_get_height(sprButton) + sprite_get_height(sprButton) / 2) );    

    isHovered = point_in_rectangle(mouse_x, mouse_y, 
                                   buttonX - sprite_get_width(sprButton) / 2, 
                                   buttonY - sprite_get_height(sprButton) / 2,
                                   buttonX + sprite_get_width(sprButton) / 2,
                                   buttonY + sprite_get_height(sprButton) / 2);

    subImage = 0;
                     
    if (isHovered) keyboard_selection = -1;
                          
    if (isHovered || keyboard_selection == i) 
    {
        subImage = 1;
        if (mouse_check_button(mb_left) || (keyboard_selection != -1 &amp;&amp; keyboard_check_direct(vk_enter)) )
        {
            subImage = 2;
        }
        
        if (mouse_check_button_released(mb_left) || (keyboard_selection != -1 &amp;&amp; keyboard_check_released(vk_enter)) )
        {
            menu_selection = i;
            event_user(0);
        }
    }
    
    draw_sprite(sprButton, subImage, buttonX, buttonY);
    
    draw_set_font(global.font);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);

    if (subImage == 2)
    {
        draw_set_color(c_white);
        draw_text(buttonX + 2, buttonY + 2, menu_options[i]);  
    }
    else
    {
        draw_set_color(c_black);
        draw_text(buttonX + 2, buttonY + 2, menu_options[i]);   
        draw_set_color(c_white);
        draw_text(buttonX, buttonY, menu_options[i]);  
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
